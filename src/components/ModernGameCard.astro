---
interface Props {
  title: string;
  description: string;
  image?: string;
  rating?: number;
  categories?: string[];
  slug: string;
  featured?: boolean;
  playTime?: string;
}

const { title, description, image, rating, categories, slug, featured, playTime } = Astro.props;

// 使用10分制评分显示
const displayRating = rating ? Math.round(rating * 10) / 10 : null;

// 为没有图片的游戏生成渐变背景
const gradients = [
  'from-purple-400 to-pink-600',
  'from-red-400 to-blue-600',
  'from-yellow-400 to-red-600',
  'from-blue-400 to-indigo-600',
  'from-pink-400 to-rose-600',
];
const randomGradient = gradients[Math.floor(Math.random() * gradients.length)];
---

<a 
  href={`/games/${slug}/`} 
  class="group block relative bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden card-hover"
>
  <!-- Featured Badge -->
  {featured && (
    <div class="absolute top-4 left-4 z-20">
      <div class="bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-3 py-1 rounded-full text-xs font-bold shadow-lg flex items-center gap-1">
        <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
        </svg>
        Featured
      </div>
    </div>
  )}
  
  <!-- Game Image Container -->
  <div class="aspect-video relative overflow-hidden bg-gradient-to-br {image ? '' : randomGradient}">
    {image ? (
      <img 
        src={image} 
        alt={title}
        class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
        loading="lazy"
      />
    ) : (
      <!-- Fallback Design -->
      <div class="absolute inset-0 flex items-center justify-center">
        <div class="text-center">
          <div class="w-20 h-20 mx-auto mb-3 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center">
            <svg class="w-10 h-10 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M18 3a1 1 0 00-1.196-.98l-10 2A1 1 0 006 5v9.114A4.369 4.369 0 005 14c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V7.82l8-1.6v5.894A4.37 4.37 0 0015 12c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V3z" />
            </svg>
          </div>
          <p class="text-white font-bold text-lg px-4">{title}</p>
        </div>
      </div>
    )}
    
    <!-- Gradient Overlay -->
    <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
    
    <!-- Play Button -->
    <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300">
      <div class="bg-white/90 backdrop-blur-sm rounded-full p-4 shadow-xl transform scale-0 group-hover:scale-100 transition-transform duration-300">
        <svg class="w-8 h-8 text-gray-800" fill="currentColor" viewBox="0 0 20 20">
          <path d="M6.3 2.841A1.5 1.5 0 004 4.11v11.78a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z" />
        </svg>
      </div>
    </div>
    
    <!-- Rating Badge -->
    {displayRating && (
      <div class="absolute bottom-2 right-2 bg-black/70 backdrop-blur-sm text-white px-2 py-1 rounded-lg text-xs font-bold flex items-center gap-1">
        <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
        </svg>
        {displayRating}/10
      </div>
    )}
  </div>

  <!-- Content Container -->
  <div class="p-5">
    <!-- Title -->
    <h3 class="font-bold text-lg text-gray-900 dark:text-white group-hover:text-transparent group-hover:bg-clip-text group-hover:bg-gradient-to-r group-hover:from-purple-400 group-hover:to-pink-600 transition-all duration-300 mb-2 line-clamp-1">
      {title}
    </h3>
    
    <!-- Categories -->
    <div class="flex flex-wrap gap-2 mb-3">
      {categories && categories.slice(0, 2).map((category) => (
        <span class="text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 px-2 py-1 rounded-full">
          {category}
        </span>
      ))}
    </div>
    
    <!-- Description -->
    <p class="text-sm text-gray-600 dark:text-gray-400 line-clamp-2 mb-4">
      {description}
    </p>

    <!-- Bottom Info -->
    <div class="flex items-center justify-between text-xs">
      {playTime && (
        <div class="flex items-center gap-1 text-blue-600 dark:text-blue-400 font-medium">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          {playTime}
        </div>
      )}
      
      <div class="text-red-600 dark:text-red-400 font-bold">
        FREE
      </div>
    </div>
  </div>
  
  <!-- Hover Effect Line -->
  <div class="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-purple-400 to-pink-600 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300"></div>
</a>